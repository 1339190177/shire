ShireFile
  ShireFrontMatterHeaderImpl(FRONT_MATTER_HEADER)
    PsiElement(ShireTokenType.FRONTMATTER_START)('---')
    PsiElement(ShireTokenType.NEWLINE)('\n')
    ShireFrontMatterEntriesImpl(FRONT_MATTER_ENTRIES)
      ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
        ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
          PsiElement(ShireTokenType.FRONTMATTER_KEY)('name')
        PsiElement(ShireTokenType.COLON)(':')
        PsiWhiteSpace(' ')
        ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
          PsiElement(ShireTokenType.QUOTE_STRING)('"Object Demo"')
        PsiElement(ShireTokenType.NEWLINE)('\n')
      ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
        ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
          PsiElement(ShireTokenType.FRONTMATTER_KEY)('description')
        PsiElement(ShireTokenType.COLON)(':')
        PsiWhiteSpace(' ')
        ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
          PsiElement(ShireTokenType.QUOTE_STRING)('"A simple object demo"')
        PsiElement(ShireTokenType.NEWLINE)('\n')
      ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
        ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
          PsiElement(ShireTokenType.FRONTMATTER_KEY)('postProcessor')
        PsiElement(ShireTokenType.COLON)(':')
        PsiWhiteSpace(' ')
        ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
          ShireFrontMatterArrayImpl(FRONT_MATTER_ARRAY)
            PsiElement(ShireTokenType.LBRACKET)('[')
            ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
              PsiElement(ShireTokenType.QUOTE_STRING)('"VerifyCode"')
            PsiElement(ShireTokenType.COMMA)(',')
            PsiWhiteSpace(' ')
            ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
              PsiElement(ShireTokenType.QUOTE_STRING)('"RunCode"')
            PsiElement(ShireTokenType.RBRACKET)(']')
        PsiElement(ShireTokenType.NEWLINE)('\n')
      ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
        ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
          PsiElement(ShireTokenType.FRONTMATTER_KEY)('fileRule')
        PsiElement(ShireTokenType.COLON)(':')
        ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
          PsiElement(ShireTokenType.NEWLINE)('\n')
          ShireObjectKeyValueImpl(OBJECT_KEY_VALUE)
            PsiElement(ShireTokenType.INDENT)('  ')
            ShireKeyValueImpl(KEY_VALUE)
              ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
                ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"**/*.java"')
                PsiElement(ShireTokenType.COLON)(':')
                PsiWhiteSpace(' ')
                ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"You MUST use should_xx_xx style for test method name, You MUST use given-when-then style."')
                PsiElement(ShireTokenType.NEWLINE)('\n')
            PsiElement(ShireTokenType.INDENT)('  ')
            ShireKeyValueImpl(KEY_VALUE)
              ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
                ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"**/*Controller.java"')
                PsiElement(ShireTokenType.COLON)(':')
                PsiWhiteSpace(' ')
                ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"Use appropriate Spring test annotations such as `@MockBean`, `@Autowired`, `@WebMvcTest`, `@DataJpaTest`, `@AutoConfigureTestDatabase`, `@AutoConfigureMockMvc`, `@SpringBootTest` etc."')
                PsiElement(ShireTokenType.NEWLINE)('\n')
            PsiElement(ShireTokenType.INDENT)('  ')
            ShireKeyValueImpl(KEY_VALUE)
              ShireFrontMatterEntryImpl(FRONT_MATTER_ENTRY)
                ShireFrontMatterKeyImpl(FRONT_MATTER_KEY)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"**/*Service.java"')
                PsiElement(ShireTokenType.COLON)(':')
                PsiWhiteSpace(' ')
                ShireFrontMatterValueImpl(FRONT_MATTER_VALUE)
                  PsiElement(ShireTokenType.QUOTE_STRING)('"Follow the common Spring code style by using the AssertJ library.\nAssume that the database is empty before each test and create valid entities with consideration for data constraints (jakarta.validation.constraints)."')
                PsiElement(ShireTokenType.NEWLINE)('\n')
    PsiElement(ShireTokenType.FRONTMATTER_END)('---')